---
// src/pages/index.astro (모바일 최적화 및 이미지 배너 최종본)
import BaseLayout from '../layouts/BaseLayout.astro';
import { projects } from '../data/projects';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

const featuredProjects = projects.filter(p => p.isFeatured && p.image);
---
<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  {/* 1. 새로운 이미지 중심 슬라이드 배너 */}
  {featuredProjects.length > 0 && (
    <section class="swiper main-banner">
      <div class="swiper-wrapper">
        {featuredProjects.map(project => (
          <div class="swiper-slide banner-slide" data-id={project.id}>
            <div class="group relative w-full h-[60vh] max-h-[500px] bg-dark-background cursor-pointer">
              <img src={project.image} alt={project.title} class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"/>
              {/* 텍스트가 모두 제거되고, 이미지 아래에 부드러운 검은색 그림자를 추가하여 시인성을 높입니다. */}
              <div class="absolute inset-x-0 bottom-0 h-1/3 bg-gradient-to-t from-black/50 to-transparent"></div>
            </div>
          </div>
        ))}
      </div>
      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
      <div class="swiper-pagination"></div>
    </section>
  )}

  <!-- 2. 모바일 최적화된 검색 및 프로젝트 목록 섹션 -->
  <section id="project-section" class="max-w-7xl mx-auto px-4 sm:px-6 py-16">
    <div class="mb-12">
      <h2 class="text-3xl font-bold text-center mb-2">심심할 때 뭐하지?</h2>
      <p class="text-secondary text-center mb-8">"해봐"에서 찾아보세요!</p>
      <div class="relative max-w-2xl mx-auto">
        <input type="text" id="search-input" placeholder="예: MBTI, 심리테스트, 퀴즈..." class="w-full px-6 py-4 border-2 border-border rounded-full bg-surface focus:outline-none focus:ring-2 focus:ring-accent"/>
        <svg class="absolute right-6 top-1/2 -translate-y-1/2 w-6 h-6 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" /></svg>
      </div>
    </div>
    {/* ▼▼▼ 모바일에서 1열, 작은 태블릿에서 2열로 보이도록 최적화 ▼▼▼ */}
    <div id="project-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-6">
      {projects.map(project => (
        <button type="button" class="project-card group block bg-surface rounded-2xl border-2 border-transparent hover:border-accent hover:shadow-xl transition-all duration-300 p-6 text-left" data-id={project.id} data-title={project.title.toLowerCase()} data-description={project.description.toLowerCase()} data-category={project.category.toLowerCase()}>
          <span class="text-xs font-semibold text-accent bg-blue-100/50 px-2 py-1 rounded-full">{project.category}</span>
          <h3 class="text-xl font-bold text-primary mt-3 mb-2">{project.title}</h3>
          <p class="text-sm text-secondary line-clamp-3 h-[60px]">{project.description}</p>
        </button>
      ))}
    </div>
    <p id="no-results" class="text-center text-secondary py-16 hidden">검색 결과가 없습니다. 😥</p>
    <nav id="pagination-controls" class="flex justify-center items-center space-x-4 my-12 text-lg">
      <button id="prev-page" class="px-5 py-2.5 bg-surface rounded-lg shadow-md hover:shadow-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed">이전</button>
      <span id="page-info" class="font-semibold text-secondary"></span>
      <button id="next-page" class="px-5 py-2.5 bg-surface rounded-lg shadow-md hover:shadow-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed">다음</button>
    </nav>
  </section>
  <div id="project-modal" class="fixed inset-0 bg-black bg-opacity-70 backdrop-blur-sm z-50 flex justify-center items-center p-4 hidden">
    <div id="modal-content" class="bg-surface rounded-2xl w-full max-w-xl max-h-[90vh] overflow-y-auto shadow-2xl relative flex flex-col">
      <div class="p-6 border-b border-border flex justify-between items-center"><p class="text-sm font-bold text-secondary"><span class="text-accent">해봐.</span> 프로젝트</p><button id="modal-close" class="text-gray-400 hover:text-primary transition-colors z-10"><svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg></button></div>
      <div class="p-8 md:p-10 flex-grow"><span id="modal-category" class="text-xs font-semibold text-accent bg-blue-100/50 px-2.5 py-1.5 rounded-full"></span><h2 id="modal-title" class="text-3xl md:text-4xl font-bold text-primary mt-4 mb-4"></h2><p id="modal-long-description" class="text-secondary leading-7 mb-8"></p><div id="modal-features-container" class="mb-8"><h4 class="font-bold text-primary mb-3">주요 기능</h4><ul id="modal-features-list" class="space-y-2"></ul></div></div>
      <div class="p-6 bg-gray-50 rounded-b-2xl"><a id="modal-link" href="#" target="_blank" rel="noopener noreferrer" class="inline-block w-full text-center bg-accent text-white font-bold py-4 px-8 rounded-lg text-lg hover:bg-accent-hover transition-colors shadow-lg">이 사이트 바로가기 →</a></div>
    </div>
  </div>
</BaseLayout>

<script is:inline src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script define:vars={{ projects }}>
  document.addEventListener('astro:page-load', () => {
    // --- 모든 자바스크립트 로직은 이전 답변의 최종본과 100% 동일합니다 ---
    const allProjects = projects;
    if (document.querySelector('.main-banner')?.swiper) {
        document.querySelector('.main-banner').swiper.destroy(true, true);
    }
    const swiper = new Swiper('.main-banner', {
      loop: true,
      autoplay: { delay: 4000, disableOnInteraction: false },
      pagination: { el: '.swiper-pagination', clickable: true },
      navigation: { nextEl: '.swiper-button-next', prevEl: '.swiper-button-prev' },
    });
    const modal = document.getElementById('project-modal');
    const modalClose = document.getElementById('modal-close');
    function openModal(projectId) {
        const project = allProjects.find(p => p.id === projectId);
        if (!project) return;
        document.getElementById('modal-category').textContent = project.category;
        document.getElementById('modal-title').textContent = project.title;
        document.getElementById('modal-long-description').textContent = project.longDescription;
        document.getElementById('modal-link').href = project.url;
        const featuresContainer = document.getElementById('modal-features-container');
        const featuresList = document.getElementById('modal-features-list');
        if (project.features && project.features.length > 0) {
            featuresList.innerHTML = '';
            project.features.forEach(featureText => {
                const li = document.createElement('li');
                li.className = 'flex items-center gap-3 text-secondary';
                li.innerHTML = `<svg class="w-5 h-5 text-accent flex-shrink-0" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5" /></svg><span>${featureText}</span>`;
                featuresList.appendChild(li);
            });
            featuresContainer.classList.remove('hidden');
        } else {
            featuresContainer.classList.add('hidden');
        }
        modal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }
    function closeModal() {
        modal.classList.add('hidden');
        document.body.style.overflow = '';
    }
    document.querySelector('.main-banner').addEventListener('click', (e) => {
      const slide = e.target.closest('.banner-slide');
      if (slide && slide.dataset.id) { openModal(slide.dataset.id); }
    });
    document.getElementById('project-grid').addEventListener('click', (e) => {
      const card = e.target.closest('.project-card');
      if (card && card.dataset.id) { openModal(card.dataset.id); }
    });
    if (modalClose) { modalClose.addEventListener('click', closeModal); }
    if (modal) { modal.addEventListener('click', (e) => { if (e.target === modal) closeModal(); }); }
    const searchInput = document.getElementById('search-input');
    const projectCards = Array.from(document.querySelectorAll('.project-card'));
    const noResultsMessage = document.getElementById('no-results');
    const paginationControls = document.getElementById('pagination-controls');
    const prevPageBtn = document.getElementById('prev-page');
    const nextPageBtn = document.getElementById('next-page');
    const pageInfo = document.getElementById('page-info');
    const ITEMS_PER_PAGE = 12;
    let currentPage = 1;
    let filteredCards = projectCards;
    function renderPage() {
        const totalPages = Math.ceil(filteredCards.length / ITEMS_PER_PAGE);
        currentPage = Math.max(1, Math.min(currentPage, totalPages || 1));
        projectCards.forEach(card => card.style.display = 'none');
        const start = (currentPage - 1) * ITEMS_PER_PAGE;
        const end = start + ITEMS_PER_PAGE;
        const pageItems = filteredCards.slice(start, end);
        pageItems.forEach(card => card.style.display = 'block');
        if (filteredCards.length > 0) {
            noResultsMessage.style.display = 'none';
        } else {
            noResultsMessage.style.display = 'block';
        }
        if (totalPages > 1) {
            paginationControls.style.display = 'flex';
            pageInfo.textContent = `${currentPage} / ${totalPages}`;
        } else {
            paginationControls.style.display = 'none';
        }
        prevPageBtn.disabled = currentPage === 1;
        nextPageBtn.disabled = currentPage === totalPages || totalPages === 0;
    }
    function applyFilter() {
        const searchTerm = searchInput.value.toLowerCase().trim();
        filteredCards = projectCards.filter(card => {
            const title = card.dataset.title || '';
            const description = card.dataset.description || '';
            const category = card.dataset.category || '';
            return title.includes(searchTerm) || description.includes(searchTerm) || category.includes(searchTerm);
        });
        currentPage = 1;
        renderPage();
    }
    searchInput.addEventListener('input', applyFilter);
    prevPageBtn.addEventListener('click', () => { if (currentPage > 1) { currentPage--; renderPage(); } });
    nextPageBtn.addEventListener('click', () => { const totalPages = Math.ceil(filteredCards.length / ITEMS_PER_PAGE); if (currentPage < totalPages) { currentPage++; renderPage(); } });
    renderPage();
  });
</script>